{"name":"dvm","tagline":"Effortless Docker-in-a-box for unsupported Docker platforms, like the Mac","body":"An on demand [Docker][docker] virtual machine, thanks to [Vagrant][vagrant] and [boot2docker][boot2docker]. Works great on Macs and other platforms that don't natively support the Docker daemon. Under the covers this is downloading and booting Mitchell Hashimoto's [boot2docker Vagrant Box][boot2docker_vagrant_box] image.\r\n\r\n## <a name=\"mac-tl-dr\"></a> tl;dr for Mac Users\r\n\r\nAre you already a Vagrant user using Virtualbox? Use Homebrew? Great!\r\n\r\n\r\n```sh\r\n# Install Docker Mac binary\r\nbrew tap homebrew/binary\r\nbrew install docker\r\n\r\n# Install dvm\r\nbrew tap fnichol/dvm\r\nbrew install dvm\r\n\r\n# Bring up your Vagrant/Docker VM\r\ndvm up\r\n\r\n# Set a DOCKER_HOST environment variable that points to your VM\r\neval $(dvm env)\r\n\r\n# Run plain 'ol Docker commands right from your Mac\r\ndocker run ubuntu cat /etc/lsb-release\r\n```\r\n\r\np.s. No Vagrant or VirtualBox installed? Check out the [Requirements](#requirements) section below.\r\n\r\n## <a name=\"requirements\"></a> Requirements\r\n\r\n* [VirtualBox][virtualbox_dl], version 4.3.4+\r\n* [Vagrant][vagrant_dl], version 1.4.0+\r\n* (*Optional*) [Docker][docker_dl], version 0.7.3+ or use the [Docker Remote API][docker_api]\r\n\r\n## <a name=\"install\"></a> Install\r\n\r\nInstallation is supported for any Unixlike platform that Vagrant and VirtualBox support.\r\n\r\n```sh\r\nwget -O dvm-0.2.2.tar.gz https://github.com/fnichol/dvm/archive/v0.2.2.tar.gz\r\ntar -xzvf dvm-0.2.2.tar.gz\r\ncd dvm-0.2.2/\r\nsudo make install\r\n```\r\n\r\n### <a name=\"intsall-homebrew\"></a> Homebrew (Mac)\r\n\r\nThere is a vendored Homebrew formula which can be installed with:\r\n\r\n```sh\r\nbrew install https://raw.github.com/fnichol/dvm/master/homebrew/dvm.rb\r\n```\r\n\r\n## <a name=\"usage\"></a> Usage\r\n\r\nBring up help with:\r\n\r\n```\r\n$ dvm --help\r\n\r\nUsage: dvm [-v|-h] command [<args>]\r\n\r\nOptions\r\n\r\n  --version, -v - Print the version and exit\r\n  --help, -h    - Display CLI help (this output)\r\n\r\nCommands\r\n\r\n  check           Ensure that required software is installed and present\r\n  destroy         Stops and deletes all traces of the vagrant machine\r\n  env             Outputs environment variables for Docker to connect remotely\r\n  halt, stop      Stops the vagrant machine\r\n  reload          Restarts vagrant machine, loads new configuration\r\n  resume          Resume the suspended vagrant machine\r\n  ssh             Connects to the machine via SSH\r\n  status          Outputs status of the vagrant machine\r\n  suspend, pause  Suspends the machine\r\n  up, start       Starts and provisions the vagrant environment\r\n  vagrant         Issue subcommands directly to the vagrant CLI\r\n```\r\n\r\nKeep in mind that dvm thiny wraps Vagrant so don't hesitate to use raw Vagrant commands in your `$HOME/.dvm` directory. Or use the `dvm vagrant` subcommand from anywhere:\r\n\r\n```\r\n$ dvm vagrant --version\r\nVagrant 1.4.2\r\n```\r\n\r\nBring up your VM with `dvm up`:\r\n\r\n```\r\n$ dvm up\r\nBringing machine 'dvm' up with 'virtualbox' provider...\r\n...<snip>...\r\n[dvm] Configuring and enabling network interfaces...\r\n[dvm] Running provisioner: shell...\r\n[dvm] Running: inline script\r\n---> Configuring docker to bind to tcp/4243 and restarting\r\n```\r\n\r\nNeed to free up some memory? Pause your VM with `dvm suspend`:\r\n\r\n```\r\n$ dvm suspend\r\n[dvm] Saving VM state and suspending execution...\r\n```\r\n\r\nWhen you come back to your Dockerawesome project resume your VM with `dvm resume`:\r\n\r\n```\r\n$ dvm resume\r\n[dvm] Resuming suspended VM...\r\n[dvm] Booting VM...\r\n[dvm] Waiting for machine to boot. This may take a few minutes...\r\n[dvm] Machine booted and ready!\r\n```\r\n\r\nYour local `docker` binary needs to be told that it is targetting a remote system and to not try the local Unix socket, which is the default behavior. Version 0.7.3 of Docker introduced the `DOCKER_HOST` environment variable that will set the target Docker host. By default, dvm will run your VM on a private network at **192.168.42.43** with Docker listening on port **4243**. The `dvm env` subcommand will print a suitable `DOCKER_HOST` line that can be used in your environment. If you want this loaded into your session, evaluate the resulting config with:\r\n\r\n```\r\n$ echo $DOCKER_HOST\r\n\r\n$ eval `dvm env`\r\n\r\n$ echo $DOCKER_HOST\r\ntcp://192.168.42.43:4243\r\n```\r\n\r\nCheck your VM status with `dvm status`:\r\n\r\n```\r\n$ dvm status\r\nCurrent machine states:\r\n\r\ndvm                       running (virtualbox)\r\n\r\nThe VM is running. To stop this VM, you can run `vagrant halt` to\r\nshut it down forcefully, or you can run `vagrant suspend` to simply\r\nsuspend the virtual machine. In either case, to restart it again,\r\nsimply run `vagrant up`.\r\n```\r\n\r\nLog into your VM (via SSH) with `dvm ssh`:\r\n\r\n```\r\n$ dvm ssh\r\n                        ##        .\r\n                  ## ## ##       ==\r\n               ## ## ## ##      ===\r\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\r\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\r\n           \\______ o          __/\r\n             \\    \\        __/\r\n              \\____\\______/\r\n _                 _   ____     _            _\r\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\r\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\r\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\r\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\r\ndocker@boot2docker:~$ uname -a\r\nLinux boot2docker 3.12.1-tinycore64 #1 SMP Sun Dec 8 19:38:19 UTC 2013 x86_64 GNU/Linux\r\ndocker@boot2docker:~$\r\n```\r\n\r\n## <a name=\"usage-embedded\"></a> Embed in a Project\r\n\r\nAs the core of dvm is a Vagranfile (surprise!) you can simply download the dvm Vagrantfile into your project using the http://git.io/dvm-vagrantfile shortlink:\r\n\r\n```sh\r\nwget -O Vagrantfile http://git.io/dvm-vagrantfile\r\n```\r\n\r\n## <a name=\"configuration\"></a> Configuration\r\n\r\nIf you wish to change the Docker TCP port or memory settings of the virtual machine, edit `$HOME/.dvm/dvm.conf` for the configuration to be used. By default the following configuration is used:\r\n\r\n* `DOCKER_IP`: `192.168.42.43`\r\n* `DOCKER_PORT`: `4243`\r\n* `DOCKER_MEMORY`: `512` (in MB)\r\n* `DOCKER_ARGS`: `-H unix:///var/run/docker.sock -H tcp://0.0.0.0:$DOCKER_PORT`\r\n\r\n## <a name=\"development\"></a> Development\r\n\r\n* Source hosted at [GitHub][repo]\r\n* Report issues/questions/feature requests on [GitHub Issues][issues]\r\n\r\nPull requests are very welcome! Make sure your patches are well tested.\r\nIdeally create a topic branch for every separate change you make. For\r\nexample:\r\n\r\n1. Fork the repo\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## <a name=\"authors\"></a> Authors\r\n\r\nCreated and maintained by [Fletcher Nichol][fnichol] (<fnichol@nichol.ca>)\r\n\r\n## <a name=\"credits\"></a> Credits\r\n\r\n* [Steeve Morin (steeve)](https://github.com/steeve) for [boot2docker][boot2docker]\r\n* [Mitchell Hashimoto (mitchellh)](https://github.com/mitchellh) for [Vagrant][vagrant] and [boot2docker Vagrant Box][boot2docker_vagrant_box]\r\n* [Postmodern (postmodern)](https://github.com/postmodern) for awesome examples of killer project skeletons in [chruby](https://github.com/postmodern/chruby) and [ruby-install](https://github.com/postmodern/ruby-install)\r\n\r\n## <a name=\"license\"></a> License\r\n\r\nApache 2.0 (see [LICENSE.txt][license])\r\n\r\n[license]:      https://github.com/fnichol/dvm/blob/master/LICENSE.txt\r\n[fnichol]:      https://github.com/fnichol\r\n[repo]:         https://github.com/fnichol/dvm\r\n[issues]:       https://github.com/fnichol/dvm/issues\r\n\r\n[docker]:         http://www.docker.io/\r\n[docker_api]:     http://docs.docker.io/en/latest/api/docker_remote_api/\r\n[docker_dl]:      http://docs.docker.io/en/latest/installation/\r\n[vagrant]:        http://www.vagrantup.com/\r\n[vagrant_dl]:     http://www.vagrantup.com/downloads.html\r\n[virtualbox_dl]:  https://www.virtualbox.org/wiki/Downloads\r\n[boot2docker]:    https://github.com/steeve/boot2docker\r\n[boot2docker_vagrant_box]: https://github.com/mitchellh/boot2docker-vagrant-box\r\n","google":"UA-29670723-1","note":"Don't delete this file! It's used internally to help with page regeneration."}